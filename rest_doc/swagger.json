{"paths":{"/api/v1/events":{"get":{"operationId":"searchEvents","tags":["events"],"summary":"Query all events by name, location, categories","parameters":[{"in":"query","name":"search","type":"string","required":false},{"in":"query","name":"location","type":"integer","format":"int32","required":false,"description":"If sort is set to location, events will be ordered by distance to the given location"},{"in":"query","name":"category","type":"integer","format":"int32","required":false,"description":"Specifies the category of the event"},{"in":"query","name":"sort","type":"string","required":false,"description":"Specifies wich column to sort by","default":"id","enum":["id","name","from","to","rating","location"]},{"in":"query","name":"sortDir","type":"boolean","required":true,"description":"Specifies wether to sort ascending(true) or descending"},{"in":"header","name":"X-Page","schema":{"type":"integer"},"default":0},{"in":"header","name":"X-Page-Size","schema":{"type":"integer"},"default":20}],"responses":{"200":{"description":"success","schema":{"type":"array","items":{"$ref":"#/definitions/whatson.model.detail.EventDetail"}}}}},"post":{"operationId":"createEvent","tags":["events"],"summary":"Create an event","parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/whatson.model.Event"},"description":"Dates (from and to), should be in the format 'yyyy-MM-dd HH:mm:ss' (example \"2017-05-23 23:05:22\")"},{"in":"header","name":"x-auth-token","schema":{"type":"string"}}],"responses":{"200":{"description":"success","schema":{"$ref":"#/definitions/whatson.model.Event"}}},"consumes":["application/json"]}},"/api/v1/events/{id}":{"get":{"operationId":"getEvent","tags":["events"],"summary":"Query the event with a specific id","responses":{"200":{"description":"success","schema":{"$ref":"#/definitions/whatson.model.detail.EventDetail"}}},"parameters":[{"in":"path","name":"id","type":"integer","format":"int32","required":true}]},"delete":{"operationId":"deleteEvent","tags":["events"],"summary":"Delete an event","parameters":[{"in":"path","name":"id","type":"integer","format":"int32","required":true},{"in":"header","name":"x-auth-token","schema":{"type":"string"}}],"responses":{"200":{"description":"Event deleted"}}},"put":{"operationId":"updateEvent","tags":["events"],"summary":"Update an event with a specific id","parameters":[{"in":"path","name":"id","type":"integer","format":"int32","required":true},{"in":"body","name":"body","schema":{"$ref":"#/definitions/whatson.model.Event"}},{"in":"header","name":"x-auth-token","schema":{"type":"string"}}],"responses":{"200":{"description":"success","schema":{"$ref":"#/definitions/whatson.model.Event"}}},"consumes":["application/json"]}},"/api/v1/events/participate/{id}":{"get":{"operationId":"participate","tags":["events"],"summary":"Participate in an event","description":"Adds the user as a participant to the event","parameters":[{"in":"path","name":"id","type":"integer","format":"int32","required":true},{"in":"header","name":"x-auth-token","schema":{"type":"string"}}],"responses":{"200":{"description":"success"},"400":{"description":"The given event does not exist."},"409":{"description":"The user is already participating."}}}},"/api/v1/events/unparticipate/{id}":{"get":{"operationId":"unparticipate","tags":["events"],"summary":"Remove participation in an event","description":"Removes the user as a participant to the event","parameters":[{"in":"path","name":"id","type":"integer","format":"int32","required":true},{"in":"header","name":"x-auth-token","schema":{"type":"string"}}],"responses":{"200":{"description":"success"},"400":{"description":"The user is not one of the participants"}}}},"/api/v1/login":{"delete":{"operationId":"deleteUser","tags":["login"],"summary":"Delete the currently logged in user","description":"The JWT will be invalid after calling this token.\n","parameters":[{"in":"header","name":"x-auth-token","schema":{"type":"string"}}],"responses":{"200":{"description":"User deleted"},"401":{"description":"Access forbidden"}}},"put":{"operationId":"updateUser","tags":["login"],"summary":"Update the currently logged in user","description":"The request body will get updated soon.\n","parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/whatson.model.Login"}},{"in":"header","name":"x-auth-token","schema":{"type":"string"}}],"responses":{"200":{"description":"User updated","schema":{"$ref":"#/definitions/whatson.model.Login"}},"401":{"description":"Access forbidden"}},"consumes":["application/json"]},"get":{"operationId":"getUser","tags":["login"],"summary":"Returns the currently logged in user","parameters":[{"in":"header","name":"x-auth-token","schema":{"type":"string"}}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/whatson.model.Login"}},"401":{"description":"Access forbidden"}}}},"/api/v1/login/signOut":{"get":{"operationId":"signOut","tags":["login"],"summary":"Sign out of account","description":"Since we are using JWT wich are stateless this action has no result.\n","parameters":[{"in":"header","name":"x-auth-token","schema":{"type":"string"}}],"responses":{"200":{"description":"success"}}}},"/api/v1/login/signIn":{"post":{"operationId":"login","tags":["login"],"summary":"Sign into an existing account","description":"The access token to this account is returned. All secured endpoints require the access token in the header parameter called 'x-auth-token'.\n","parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/whatson.model.SignInForm"},"description":"The user data. If rememberMe is true, the authentication token will be valid for several days.\n"}],"responses":{"200":{"description":"success","schema":{"$ref":"#/definitions/whatson.model.AccessToken"}},"401":{"description":"Access forbidden"}},"consumes":["application/json"]}},"/api/v1/login/confirm":{"get":{"operationId":"confirm","tags":["login"],"summary":"Confirms the account of the user","description":"This confirms an account. After calling this action users can log in an use all secured enpoints normally. This normally gets called by following the link in confirmation mails.\n","parameters":[{"in":"query","name":"token","type":"string","required":true}],"responses":{"200":{"description":"Success"}}}},"/api/v1/login/authenticate/{provider}":{"get":{"operationId":"authenticate","tags":["login"],"summary":"Authenticate a user/organizer via a social provider","description":"This method authenticates a user/organizer via a social network. If the authorisation is successfull, the user gets redirected to the home page(index). The webapplication can then get the authorisation token from the url parameter called token. Note: This method is not supposed to be called in an ajax request. Provide a link to this url instead.\n","parameters":[{"in":"path","name":"provider","type":"string","required":true,"enum":["facebook","google"]},{"in":"query","name":"userType","type":"string","required":true,"default":"user","enum":["user","organizer"]}],"responses":{"200":{"description":"success"}}}},"/api/v1/user/signUp":{"post":{"operationId":"signUp","tags":["user"],"summary":"Create a new account","description":"A new account gets created. The access token to this account is returned. All secured endpoints require the access token in the header parameter called 'x-auth-token'. In production an confirmation mail gets send to the provided email. For development accounts are automatically unlocked for convenience.\n","parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/whatson.model.forms.UserSignUpForm.Data"},"description":"The user data. The password must not be hashed."}],"responses":{"200":{"description":"Success. A login/confirmation is required after this."},"400":{"description":"User already exists"}},"consumes":["application/json"]}},"/api/v1/organizer/{id}":{"get":{"operationId":"get","tags":["organizer"],"summary":"Get the public account of an organizer","responses":{"200":{"description":"success","schema":{"$ref":"#/definitions/whatson.model.detail.OrganizerPublic"}}},"parameters":[{"in":"path","name":"id","type":"integer","format":"int32","required":true}]}},"/api/v1/organizer/signUp":{"post":{"operationId":"signUp","tags":["organizer"],"summary":"Create a new account","description":"A new account gets created. The access token to this account is returned. All secured endpoints require the access token in the header parameter called 'x-auth-token'.\n","parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/whatson.model.forms.OrganizerSignUpForm.Data"},"description":"The user data. The password must not be hashed."}],"responses":{"200":{"description":"Success. A login/confirmation is required after this."},"400":{"description":"Organizer already exists"}},"consumes":["application/json"]}},"/api/v1/category":{"get":{"operationId":"categories","tags":["api"],"summary":"Query all categories","description":"Returns a list of all categories. A category consists of an id, name, and a parentId wich references The parent category. If the parentId is equal to the category id, the category has no parent.\n","responses":{"200":{"description":"success","schema":{"type":"array","items":{"$ref":"#/definitions/whatson.model.detail.CategoryDetail"}}}}},"post":{"operationId":"createCategory","tags":["api"],"summary":"Create a category","description":"Creates a category. The parentId must reference an existing category. If the category should have no parent the id of the category named 'All' must be used. That id can be obtained using the GET /category Request.\n","parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/whatson.model.Category"}},{"in":"header","name":"x-auth-token","schema":{"type":"string"}}],"responses":{"200":{"description":"success","schema":{"$ref":"#/definitions/whatson.model.Category"}}},"consumes":["application/json"]}},"/api/v1/location":{"get":{"operationId":"searchLocations","tags":["api"],"summary":"Search locations by name","description":"Searches for locations wich contain the search string in their name.\n","parameters":[{"in":"query","name":"search","type":"string","required":false},{"in":"header","name":"X-Page","schema":{"type":"integer"}},{"in":"header","name":"X-Page-Size","schema":{"type":"integer"}}],"responses":{"200":{"description":"success","schema":{"type":"array","items":{"$ref":"#/definitions/whatson.model.detail.LocationDetail"}}}}},"post":{"operationId":"createLocation","tags":["api"],"summary":"Create a location","description":"Create a location. Returns the created location with its id. This request is callable for all logged in users and organizers.\n","parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/whatson.model.Location"}},{"in":"header","name":"x-auth-token","schema":{"type":"string"}}],"responses":{"200":{"description":"success","schema":{"$ref":"#/definitions/whatson.model.Location"}}},"consumes":["application/json"]}},"/api/v1/location/{id}":{"get":{"operationId":"getLocation","tags":["api"],"summary":"Get a specific location","responses":{"200":{"description":"success","schema":{"$ref":"#/definitions/whatson.model.detail.LocationDetail"}},"404":{"description":"The location with the given id does not exist"}},"parameters":[{"in":"path","name":"id","type":"integer","format":"int32","required":true}]}},"/api/v1/location/nearby/{id}":{"get":{"operationId":"getNearby","tags":["api"],"summary":"Get locations nearby a specific location","description":"Returns a list of locations sorted by the distance to the given location.\n","responses":{"200":{"description":"success","schema":{"type":"array","items":{"$ref":"#/definitions/whatson.model.detail.LocationDetail"}}},"404":{"description":"The location with the given id could not be found"}},"parameters":[{"in":"path","name":"id","type":"integer","format":"int32","required":true}]}},"/api/v1/rating/{id}/{entityType}/{rate}":{"get":{"operationId":"rateEntity","tags":["api"],"summary":"Rate a specific entity","description":"Rate a given entity. This action is only callable for logged in users. If a user has already rated the same entity the rating gets updated. The rating must be a float in between 1 and 5(inclusivly).\n","parameters":[{"in":"path","name":"id","type":"integer","format":"int32","required":true},{"in":"path","name":"entityType","type":"string","required":true,"enum":["Event","Location","Organizer"]},{"in":"path","name":"rate","type":"number","format":"float","required":true},{"in":"header","name":"x-auth-token","schema":{"type":"string"}}],"responses":{"200":{"description":"success","schema":{"$ref":"#/definitions/whatson.model.Rating"}}}}},"/api/v1/images/{id}":{"get":{"operationId":"get","tags":["api"],"summary":"Get a specific image","description":"Returns name and id of an image. The content is not returned.\n","responses":{"200":{"description":"success","schema":{"$ref":"#/definitions/whatson.model.detail.ImageDetail"}}},"parameters":[{"in":"path","name":"id","type":"integer","format":"int32","required":true}]}},"/api/v1/images/bytes/{id}":{"get":{"operationId":"getBytes","tags":["api"],"summary":"Get bytes of a specific image","description":"Returns the content of the image as a byte array.\n","responses":{"200":{"description":"success"}},"parameters":[{"in":"path","name":"id","type":"integer","format":"int32","required":true}]}},"/api/v1/images/{name}":{"post":{"operationId":"createImage","tags":["api"],"summary":"Create an image","description":"Creates an image. The imagedata is expected as a multipart file in the request body. Returns id and name of the created image.\n","consumes":["multipart/form-data"],"parameters":[{"in":"path","name":"name","type":"string","required":true},{"in":"formData","name":"image","type":"file","description":"The file to upload."}],"responses":{"200":{"description":"success","schema":{"$ref":"#/definitions/whatson.model.Image"}}}}},"/api/v1/images/attach/{id}":{"get":{"operationId":"attachImage","tags":["api"],"summary":"Attach an image","description":"Attach an image to a given entity. This is callable for logged in users and organizers. Organizers can attach images to their own account, events created by them and locations, while users can only attach images to locations.\n","parameters":[{"in":"path","name":"id","type":"integer","format":"int32","required":true},{"in":"query","name":"entityType","type":"string","required":true,"enum":["Event","Location","Organizer"]},{"in":"query","name":"entityId","type":"integer","format":"int32","required":true},{"in":"header","name":"x-auth-token","schema":{"type":"string"},"required":true}],"responses":{"200":{"description":"success","schema":{"$ref":"#/definitions/whatson.model.ImageEntity"}}}}}},"definitions":{"whatson.model.Login":{"properties":{"id":{"type":"integer","format":"int32"},"email":{"type":"string"},"pwHash":{"type":"string"},"pwSalt":{"type":"string"},"pwHasher":{"type":"string"},"providerID":{"type":"string"},"providerKey":{"type":"string"},"confirmed":{"type":"boolean"}},"required":["email","providerID","providerKey","confirmed"]},"whatson.model.detail.CategoryDetail":{"properties":{"id":{"type":"integer","format":"int32"},"name":{"type":"string"},"parentId":{"type":"integer","format":"int32"},"images":{"type":"array","items":{"type":"integer","format":"int32"}}},"required":["name","parentId","images"]},"whatson.model.AccessToken":{"properties":{"token":{"type":"string"}},"required":["token"]},"whatson.model.SignInForm":{"properties":{"email":{"type":"string"},"password":{"type":"string"},"rememberMe":{"type":"boolean"}},"required":["email","password","rememberMe"]},"whatson.model.forms.UserSignUpForm.Data":{"properties":{"email":{"type":"string"},"password":{"type":"string"}},"required":["email","password"]},"whatson.model.detail.OrganizerPublic":{"properties":{"id":{"type":"integer","format":"int32"},"name":{"type":"string"},"avgRating":{"type":"number","format":"float"},"images":{"type":"array","items":{"type":"integer","format":"int32"}},"avatar":{"type":"string"}},"required":["name","images"]},"whatson.model.Rating":{"properties":{"id":{"type":"integer","format":"int32"},"rating":{"type":"number","format":"float"},"userId":{"type":"integer","format":"int32"},"entityId":{"type":"integer","format":"int32"},"entityType":{"type":"string","enum":["Event","Location","Organizer","Category"]}},"required":["rating","userId","entityId","entityType"]},"whatson.model.detail.ImageDetail":{"properties":{"id":{"type":"integer","format":"int32"}},"required":["id"]},"whatson.model.detail.LocationDetail":{"properties":{"id":{"type":"integer","format":"int32"},"name":{"type":"string"},"latitude":{"type":"number","format":"float"},"longitude":{"type":"number","format":"float"},"avgRating":{"type":"number","format":"float"},"images":{"type":"array","items":{"type":"integer","format":"int32"}}},"required":["name","latitude","longitude","images"]},"whatson.model.Image":{"properties":{"id":{"type":"integer","format":"int32"},"name":{"type":"string"},"data":{"type":"array[byte]"}},"required":["name","data"]},"whatson.model.forms.OrganizerSignUpForm.Data":{"properties":{"email":{"type":"string"},"password":{"type":"string"},"name":{"type":"string"}},"required":["email","password","name"]},"whatson.model.ImageEntity":{"properties":{"imageId":{"type":"integer","format":"int32"},"entityId":{"type":"integer","format":"int32"},"entityType":{"type":"string","enum":["Event","Location","Organizer","Category"]}},"required":["imageId","entityId","entityType"]},"whatson.model.Event":{"properties":{"id":{"type":"integer","format":"int32"},"name":{"type":"string"},"from":{"type":"java.sql.timestamp"},"to":{"type":"java.sql.timestamp"},"description":{"type":"string"},"creatorId":{"type":"integer","format":"int32"},"locationId":{"type":"integer","format":"int32"}},"required":["name","from","to","description","locationId"]},"whatson.model.Location":{"properties":{"id":{"type":"integer","format":"int32"},"name":{"type":"string"},"latitude":{"type":"number","format":"float"},"longitude":{"type":"number","format":"float"}},"required":["name","latitude","longitude"]},"whatson.model.Category":{"properties":{"id":{"type":"integer","format":"int32"},"name":{"type":"string"},"parentId":{"type":"integer","format":"int32"}},"required":["name","parentId"]},"whatson.model.Organizer":{"properties":{"id":{"type":"integer","format":"int32"},"name":{"type":"string"},"loginFk":{"type":"integer","format":"int32"},"avatar":{"type":"string"}},"required":["name","loginFk"]},"whatson.model.detail.EventDetail":{"properties":{"id":{"type":"integer","format":"int32"},"name":{"type":"string"},"from":{"type":"java.sql.timestamp"},"to":{"type":"java.sql.timestamp"},"description":{"type":"string"},"creator":{"$ref":"#/definitions/whatson.model.Organizer"},"categories":{"type":"array","items":{"$ref":"#/definitions/whatson.model.Category"}},"avgRating":{"type":"number","format":"float"},"location":{"$ref":"#/definitions/whatson.model.Location"},"images":{"type":"array","items":{"type":"integer","format":"int32"}},"participantCount":{"type":"integer","format":"int32"}},"required":["name","from","to","description","creator","categories","location","images","participantCount"]}},"swagger":"2.0","info":{"title":"WhatsOn API","description":"Search for events","version":"1.0.0"},"consumes":["application/json"],"produces":["application/json"],"tags":[{"name":"user"},{"name":"api"},{"name":"organizer"},{"name":"login"},{"name":"events"}]}